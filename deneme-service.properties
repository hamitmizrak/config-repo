# application.yml
# http://localhost:8888/application/default
# http://localhost:8888/application/dev
# http://localhost:8888/application/prod
# http://localhost:8888/product-service/default
# http://localhost:8888/user-service/default

### System config(Genel Ayarlar) #####################################################
######################################################################################
### PORT /NAME #######################################################################
# Port
# http://localhost:8081
# 65536 port(geçit,kapı)
# 0     <= PORT <= 1023 Private  80: proje kapısı, 23: SSH, 443: SSL Reverse Proxy:  8081:80
# 1024  <= PORT <= 49151 Registered, 3306, 5432,
# 49152 <= PORT <= 65535
server.port=8081

spring.application.name=deneme-service
spring.config.import=optional:configserver:http://localhost:8761


deneme.message ="Merhaba, bu bir yapılandırma mesajıdır!"

######################################################################################
### WINDOWS PORT KAPAT ############################################################
# Windows Port Kapatmak (Power Shell Terminalde Aç)
# netstat -aon | findstr :8081  => Buradan Gelen [EN SAĞDAKI PID]
# taskkill /PID [EN SAĞDAKI PID] /F

######################################################################################
### White label  #####################################################################
server.error.whitelabel.enabled=true

######################################################################################
######################################################################################
### API  #############################################################################
######################################################################################
### Swagger(Open Api config)  ########################################################
## swagger open api 3.0
## http://localhost:8081/swagger-ui.html
## http://localhost:8081/swagger-ui/index.html
## http://localhost:8081/api-docs/
## http://localhost:8081/v3/api-docs/
#springdoc.api-docs.path=/api-docs
#springdoc.swagger-ui.path=/swagger-ui/index.html
#springdoc.packagesToScan=com.hamitmizrak.controller.api
#pringdoc.pathsToMatch=/**

######################################################################################
######################################################################################
### LOGLAMA  ########################################################################
######################################################################################
### Log ##############################################################################
# Loglama Asenkron
# sabit bir yerde saklamaliyiz.
logging.file.name=./log/properties.log
# spring hatalari almak icin
# logging.level.org.springframework=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR
# logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
# Gunluk dosyasinin konumunu yapilandirir.
# logging.file.path=./
# logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
# Log LEVEL (7)
# O F E W I D T
# OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE
logging.level.root=INFO

######################################################################################
### Profiles #########################################################################
# Development (Geliştirme): Geliştirme Ortamı için kullanmak ve Gerçek olmayan kullanıcı bilgileri
# Production  (Canlı)     : Üretim ortamı içindir. Gerçek Kullanıcıların bilgileri
# Test        (Testing)   : Test ortamı için, Test için gerekli configuration içindir

# H2DB (Development)
# PORT: 1111
# spring.profiles.active=dev
# mvn spring-boot:run -Dspring.profiles.active=dev

# MYSQL (Production)
# PORT: 2222
# spring.profiles.active=prod
# mvn spring-boot:run -Dspring.profiles.active=prod

# POSTGRESQL (Test)
# PORT: 3333
# spring.profiles.active=test
# mvn spring-boot:run -Dspring.profiles.active=test

######################################################################################
### Relation Database ################################################################
### Database Config ##################################################################
logging.level.org.springframework.jdbc.core=TRACE
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.show-sql=true

# once create sonra  durdur update yap
# jpa > none update create, create-drop, validate
# create     : Veritabani semasini olusturur. Eger tablolar varsa siler tekrar olusturur. (Öneri: Test ortamında)
# create-drop: Veritabani semasini olusturur. Eger tablolar varsa siler tekrar olusturur. (uygulama kapanirken tablolari siler)
# validate   : Var olan tablolari karsilastirir, herhangi bir degisiklik yapmaz. Sadece doğrulama işlemi yapar.
# update     : Veri tabani silmez yeni tablolari ekler veya güncellemeler yapar (Öneri: Production ortamında)
spring.jpa.hibernate.ddl-auto=create-drop

######################################################################################
### MYSQL DB #########################################################################
##CREATE SCHEMA `blog` DEFAULT CHARACTER SET utf8 COLLATE utf8_turkish_ci ;
## use blog;
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/blog?createDatabaseIfNotExist=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=rootroot

######################################################################################
### H2 DB#############################################################################
## Generic JNDI Data Source data 44
## in Memory
## spring.datasource.url=jdbc:h2:mem:denemedb
## Directory on Disk
## spring.datasource.url=jdbc:h2:file:C:/data/denemedb
## Current User Directory
## spring.datasource.url=jdbc:h2:file:~/denemedb
## Current Working Directory
## http://localhost:8081/h2-console
## following setting h2-console
#
# manuel apache tomcat için kullandim
# http://localhost:8081/h2-console
# Spring Security
spring.h2.console.settings.web-allow-others=true
security.basic.enabled=true
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.url=jdbc:h2:mem:blog
# spring.datasource.url=jdbc:h2:file:./memory_persist/register;useSSL=falseDB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE
spring.datasource.url=jdbc:h2:file:./database_memory_persist/blog
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

######################################################################################
### POSTGRESQL  ######################################################################
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.datasource.url=jdbc:postgresql://localhost:5432/blog
#spring.datasource.username=postgres
#spring.datasource.password=rootroot
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

######################################################################################
### ORACLE ###########################################################################
# spring.datasource.url=jdbc:oracle:thin:@localhost:1521:orcl
# spring.datasource.username=system
# spring.datasource.password=Password123

######################################################################################
######################################################################################
######################################################################################
### Non-Relation Database ############################################################

######################################################################################
### MONGO DB #########################################################################
## Robo 3T
##  @SpringBootApplication icinde bunu yaz ==> @EnableMongoRepositories
##  @Repository ==> public interface IDeneme extends MongoRepository<EntityName,Long>{}
# spring.data.mongodb.database=mongodb
# spring.data.mongodb.uri=mongodb://localhost:27017